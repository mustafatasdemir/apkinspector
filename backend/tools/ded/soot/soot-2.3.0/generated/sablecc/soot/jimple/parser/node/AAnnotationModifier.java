/* This file was generated by SableCC (http://www.sablecc.org/). */

package soot.jimple.parser.node;

import java.util.*;
import soot.jimple.parser.analysis.*;

public final class AAnnotationModifier extends PModifier
{
    private TAnnotation _annotation_;

    public AAnnotationModifier()
    {
    }

    public AAnnotationModifier(
        TAnnotation _annotation_)
    {
        setAnnotation(_annotation_);

    }
    public Object clone()
    {
        return new AAnnotationModifier(
            (TAnnotation) cloneNode(_annotation_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAnnotationModifier(this);
    }

    public TAnnotation getAnnotation()
    {
        return _annotation_;
    }

    public void setAnnotation(TAnnotation node)
    {
        if(_annotation_ != null)
        {
            _annotation_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _annotation_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_annotation_);
    }

    void removeChild(Node child)
    {
        if(_annotation_ == child)
        {
            _annotation_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_annotation_ == oldChild)
        {
            setAnnotation((TAnnotation) newChild);
            return;
        }

    }
}
