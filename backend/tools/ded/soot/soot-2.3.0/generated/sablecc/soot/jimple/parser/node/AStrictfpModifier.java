/* This file was generated by SableCC (http://www.sablecc.org/). */

package soot.jimple.parser.node;

import java.util.*;
import soot.jimple.parser.analysis.*;

public final class AStrictfpModifier extends PModifier
{
    private TStrictfp _strictfp_;

    public AStrictfpModifier()
    {
    }

    public AStrictfpModifier(
        TStrictfp _strictfp_)
    {
        setStrictfp(_strictfp_);

    }
    public Object clone()
    {
        return new AStrictfpModifier(
            (TStrictfp) cloneNode(_strictfp_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAStrictfpModifier(this);
    }

    public TStrictfp getStrictfp()
    {
        return _strictfp_;
    }

    public void setStrictfp(TStrictfp node)
    {
        if(_strictfp_ != null)
        {
            _strictfp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _strictfp_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_strictfp_);
    }

    void removeChild(Node child)
    {
        if(_strictfp_ == child)
        {
            _strictfp_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_strictfp_ == oldChild)
        {
            setStrictfp((TStrictfp) newChild);
            return;
        }

    }
}
